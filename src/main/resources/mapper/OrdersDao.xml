<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zut.dao.OrdersDao">

    <resultMap type="com.zut.entity.Orders" id="OrdersMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="cwId" column="Cw_id" jdbcType="VARCHAR"/>
        <result property="ordersId" column="orders_id" jdbcType="INTEGER"/>
        <result property="ordersMoney" column="orders_money" jdbcType="INTEGER"/>
        <result property="ordersTime" column="orders_time" jdbcType="VARCHAR"/>
        <result property="ordersEval" column="orders_eval" jdbcType="VARCHAR"/>
        <result property="ordersStatus" column="orders_status" jdbcType="VARCHAR"/>
    </resultMap>


    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          user_id, Cw_id, orders_id, orders_money, orders_time, orders_eval
        from orders
        where orders_id = #{ordersId}
    </select>

    <!--查询某段时间内的金额总数-->
    <select id="querySumMoney" resultType="java.lang.Integer">
        SELECT sum(orders.orders_money) as money FROM orders
        WHERE orders_time BETWEEN #{bTime} AND #{eTime}
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="OrdersMap">
        select *
        from orders
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrdersMap">
        select
          user_id, Cw_id, orders_id, orders_money, orders_time, orders_eval
        from orders
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="cwId != null and cwId != ''">
                and Cw_id = #{cwId}
            </if>
            <if test="ordersId != null">
                and orders_id = #{ordersId}
            </if>
            <if test="ordersMoney != null">
                and orders_money = #{ordersMoney}
            </if>
            <if test="ordersTime != null and ordersTime != ''">
                and orders_time = #{ordersTime}
            </if>
            <if test="ordersEval != null and ordersEval != ''">
                and orders_eval = #{ordersEval}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from orders
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="cwId != null and cwId != ''">
                and Cw_id = #{cwId}
            </if>
            <if test="ordersId != null">
                and orders_id = #{ordersId}
            </if>
            <if test="ordersMoney != null">
                and orders_money = #{ordersMoney}
            </if>
            <if test="ordersTime != null and ordersTime != ''">
                and orders_time = #{ordersTime}
            </if>
            <if test="ordersEval != null and ordersEval != ''">
                and orders_eval = #{ordersEval}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="ordersId" useGeneratedKeys="true">
        insert into orders(user_id, Cw_id, orders_money, orders_time, orders_eval,orders_status)
        values (#{userId}, #{cwId}, #{ordersMoney}, #{ordersTime}, #{ordersEval},#{ordersStatus})
    </insert>

    <insert id="insertBatch" keyProperty="ordersId" useGeneratedKeys="true">
        insert into orders(user_id, Cw_id, orders_money, orders_time, orders_eval,orders_status)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userId}, #{entity.cwId}, #{entity.ordersMoney}, #{entity.ordersTime}, #{entity.ordersEval},#{entity.ordersStatus})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="ordersId" useGeneratedKeys="true">
        insert into orders(user_id, Cw_id, orders_money, orders_time, orders_eval,orders_status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.cwId}, #{entity.ordersMoney}, #{entity.ordersTime}, #{entity.ordersEval},#{entity.ordersStatus})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        Cw_id = values(Cw_id),
        orders_money = values(orders_money),
        orders_time = values(orders_time),
        orders_eval = values(orders_eval),
        orders_status = values(orders_status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update orders
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="cwId != null and cwId != ''">
                Cw_id = #{cwId},
            </if>
            <if test="ordersMoney != null">
                orders_money = #{ordersMoney},
            </if>
            <if test="ordersTime != null and ordersTime != ''">
                orders_time = #{ordersTime},
            </if>
            <if test="ordersEval != null and ordersEval != ''">
                orders_eval = #{ordersEval},
            </if>
            <if test="ordersStatus != null and ordersStatus != ''">
                orders_status = #{ordersStatus},
            </if>
        </set>
        where orders_id = #{ordersId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from orders where orders_id = #{ordersId}
    </delete>

</mapper>

